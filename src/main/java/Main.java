import java.util.Scanner;

public class Main {  // Corrigido de "main" para "Main"
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        TaskServices taskServices = new TaskServices();

        boolean running = true;

        while (true) {
            System.out.println("\nüìå MENU DA TO-DO LIST");
            System.out.println("1Ô∏è‚É£ Adicionar nova tarefa");
            System.out.println("2Ô∏è‚É£ Listar tarefas pendentes");
            System.out.println("3Ô∏è‚É£ Concluir uma tarefa");
            System.out.println("4Ô∏è‚É£ Listar tarefas conclu√≠das");
            System.out.println("5Ô∏è‚É£ Editar uma tarefa");
            System.out.println("6Ô∏è‚É£ Sair");
            System.out.print("Escolha uma op√ß√£o: ");

            int option = scanner.nextInt();
            scanner.nextLine(); // Consumir quebra de linha

            switch (option) {
                case 1:
                    System.out.println("Digite o t√≠tulo da tarefa: ");
                    String title = scanner.nextLine();
                    System.out.println("Dificuldade (EASY, MEDIUM, HARD): ");
                    String difficultyInput = scanner.nextLine().toUpperCase();

                    Task.Difficulty difficulty;
                    try {
                        difficulty = Task.Difficulty.valueOf(difficultyInput);
                    } catch (IllegalArgumentException e) {
                        System.out.println("Dificuldade inv√°lida! Escolha entre: EASY, MEDIUM ou HARD. Usando EASY por padr√£o.");
                        difficulty = Task.Difficulty.EASY;
                    }

                    Task newTask = new Task(title, difficulty);
                    taskServices.addTask(newTask);
                    break;

                case 2:
                    taskServices.listIncompleteTasks();
                    break;

                case 3:
                    System.out.println("Digite o t√≠tulo da tarefa conclu√≠da: ");
                    String completedTitle = scanner.nextLine();
                    taskServices.completeTask(completedTitle);
                    break;

                case 4:
                    taskServices.listCompletedTasks();
                    break;

                case 5:
                    System.out.print("Digite o t√≠tulo da tarefa que deseja editar: ");
                    String oldTitle = scanner.nextLine();

                    System.out.print("Digite o novo t√≠tulo: ");
                    String newTitle = scanner.nextLine();

                    System.out.print("Nova dificuldade (EASY, MEDIUM, HARD): ");
                    String newDifficultyInput = scanner.nextLine().toUpperCase();

                    Task.Difficulty newDifficulty;
                    try {
                        newDifficulty = Task.Difficulty.valueOf(newDifficultyInput);
                    } catch (IllegalArgumentException e) {
                        System.out.println("Dificuldade inv√°lida! Usando EASY por padr√£o.");
                        newDifficulty = Task.Difficulty.EASY;
                    }

                    taskServices.editTask(oldTitle, newTitle, newDifficulty);
                    break;

                case 6:
                    System.out.println("Saindo do programa... üöÄ");
                    running = false;
                    break;

                default:
                    System.out.println("Op√ß√£o inv√°lida! Tente novamente.");
            }
        }
    }
}